T = [0; 3.5; 7; 10.5; 14; 17.5; 21; 24.5; 28; 31.5; 35; 38.5; 42; 45.5; 49; 52.5; 56; 59.5; 63; 66.5; 70];
H = [-8410.731235; -8398.302651; -8385.847086; -8373.362909; -8360.848469; -8348.302098; -8335.722101; -8323.106756; -8310.454311; -8297.762976; -8285.030922; -8272.256277; -8259.43712; -8246.571476; -8233.657308; -8220.692519; -8207.674935; -8194.602307; -8181.472299; -8168.282481; -8155.03032];
k = [0.4; 0.7; 0.5; 0.1; 0.3; 0.1; 0.7; 0.1; 0.8; 0.5; 0.2; 0.8; 0.6; 0.2; 0.1; 0.0; 0.5; 0.3; 0.9; 0.3; 0.8];

% Таблица конечных разностей
disp('Таблица конечных разностей');
d1 = diff(H, 1);
d2 = diff(H, 2);
d3 = diff(H, 3);
n = size(d1);
for i=1:3
    for j=1:n(1)
        if i == 3 && j <= n(1) - 2
            d(i,j) = d3(j);
        elseif i == 2 && j <= n(1) - 1
            d(i,j) = d2(j);
        elseif i == 1 && j <= n(1)
            d(i,j) = d1(j);
        else
            d(i,j) = 0; 
        end;
    end;
end;
disp(transpose(d));
disp('Интерполяционный полином должен быть не выше 3-ей степени');
disp('-------------------------------------------------------')

% Аппроксимационный полином без учёта весовых коэффициентов с использованием определителя Вандермонда
n = length(T) - 1;
W = vander(T);
W = W(1:21, 2:21);
A = W'*W;
b = W'*H;
a = inv(A) * b;
x_range = linspace(min(T), max(T), 100);
y_appr = polyval(a, x_range);

figure;
plot(T, H, 'o', x_range, y_appr, '-');
legend('Исходные точки', 'Аппроксимационный полином', 'Location', 'Northwest');
xlabel('температуры, C');
ylabel('массовая энтальпия, kJ/kg');
title('Аппроксимационный полином без учета весовых коэффициентов(Вандермонд)');
hold off;

% Построить аппроксимационный полином без учёта весовых коэффициентов с использованием стандартных операторов MATLAB
a0 = [0,0,0,0];
f = inline('a(4)*T.^3+a(3)*T.^2 + a(2)*T + a(1)','a','T');
[coef, resnorm, residual, exitflag] = lsqcurvefit(f, a0, T, H);
x_range = linspace(min(T), max(T), 100);
y_appr = polyval(coef, x_range);

figure;
plot(T, H, 'o', x_range, y_appr, '-');
legend('Исходные точки', 'Аппроксимационный полином', 'Location', 'Northwest');
xlabel('температуры, C');
ylabel('массовая энтальпия, kJ/kg');
title('Аппроксимационный полином без учета весовых коэффициентов(lsqcurvefit)');
hold off;

% Построить аппроксимационный полином с учётом весовых коэффициентов с использованием функции spap2
n = 3;
sp = spap2(length(T)-n, n, T, H, k);

figure;
fnplt(sp);
hold on;
plot(T,H,'*');
legend('Аппроксимационный полином', 'Исходные точки', 'Location', 'Northwest');
xlabel('температуры, C');
ylabel('массовая энтальпия, kJ/kg');
title('Аппроксимационный полином с учетом весовых коэффициентов(spap2)');
hold off;

% Построить аппроксимационный полином с учётом весовых коэффициентов с использованием функции fminsearch
n = 2;
fun = @(a) sum(k .* (polyval(a, T) - H).^2);
a0 = ones(1, n+1);
a_opt = fminsearch(fun, a0);
x_range = linspace(min(T), max(T), 100);
y_appr = polyval(a_opt, x_range);

figure;
plot(T, H, 'o', x_range, y_appr, '-');
legend('Исходные точки', 'Аппроксимационный полином', 'Location', 'Northwest');
xlabel('температуры, C');
ylabel('массовая энтальпия, kJ/kg');
title('Аппроксимационный полином с учетом весовых коэффициентов(fminsearch)');
hold off;

